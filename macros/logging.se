# This software (Augur) allows buying and selling event options in Ethereum.
#
# Copyright (c) 2015 Forecast Foundation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# If you have questions, please contact Jack Peterson (jack@augur.net).

# Prints an array.  Logs either contain a single entry (for integer values)
# or two entries (for fixed point numbers, the first entry is the integer
# and the second is the decimal).
macro log_array($a):
    with $n = len($a):
        with $i = 0:
            while $i < $n:
                # print 8 decimal points (adjustable)
                with $decimal = ($a[$i] & (ONE - 1)) * 10^8 / ONE:
                    if $decimal > 0:
                        log($a[$i] / ONE, $decimal)
                    else:
                        log($a[$i] / ONE)
                    $i += 1

macro log_unfixed_array($a):
    with $n = len($a):
        with $i = 0:
            while $i < $n:
                log($a[$i])
                $i += 1

# Prints a single entry (for integer values) or two entries (for fixed point
# numbers, the first entry is the integer and the second is the decimal).
macro log_fixed($x):
    with $d = ($x & (ONE - 1)) * 10^8 / ONE:
        if $d > 0:
            log($x / ONE, $d)
        else:
            log($x / ONE)
